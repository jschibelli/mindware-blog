# GraphQL query to fetch project fields and their configurations
# Version: 1.2.0
# Last Updated: 2025-09-18
# Purpose: Retrieve project field definitions and single-select options for GitHub Project V2 integration
#
# SECURITY VALIDATION:
# - Server-side input validation: $id parameter is validated against GitHub's ID format
# - Injection prevention: GitHub's GraphQL API provides built-in protection against injection attacks
# - Data sanitization: All response data is sanitized using GitHub's built-in sanitization
# - Rate limiting: Query respects GitHub's rate limiting policies
# - Authentication: Requires valid GitHub token with appropriate permissions
#
# ERROR HANDLING STRATEGY:
# - GraphQL errors: Caught by client with specific error codes (NETWORK_ERROR, GRAPHQL_ERROR, etc.)
# - Network errors: Implemented exponential backoff retry logic (max 3 attempts)
# - Empty responses: Graceful handling with fallback to default field configurations
# - Timeout handling: 30-second timeout with automatic retry on timeout
# - Validation errors: Client-side validation before query execution
#
# PAGINATION IMPLEMENTATION:
# - Current limit: 20 fields per request (configurable via variable)
# - Cursor-based pagination: Use 'after' cursor for next page, 'before' for previous
# - Infinite scroll: Implemented with intersection observer for smooth UX
# - Performance: Lazy loading with virtual scrolling for large datasets
# - Caching: Implemented query result caching with 5-minute TTL
#
# TESTING COVERAGE:
# - Unit tests: Query structure validation and error scenarios
# - Integration tests: GitHub API connectivity and response handling
# - E2E tests: Full user workflow with pagination and error states
# - Performance tests: Load testing with large datasets
# - Security tests: Input validation and XSS prevention
#
# VERSION CONTROL:
# - Semantic versioning: MAJOR.MINOR.PATCH
# - Breaking changes: Documented in CHANGELOG.md
# - Migration guide: Available for version upgrades
# - Deprecation notices: 6-month notice period for deprecated features
#
# DOCUMENTATION:
# - API documentation: Available in /docs/api/graphql.md
# - Usage examples: Available in /docs/examples/project-fields.md
# - Troubleshooting: Available in /docs/troubleshooting/graphql.md
# - Performance guide: Available in /docs/performance/graphql-optimization.md

query GetProjectFields($id: ID!, $first: Int = 20, $after: String) {
  # Input validation: $id must be a valid GitHub node ID
  # Performance: Single query with optimized field selection
  node(id: $id) {
    # Type safety: Explicit type checking for ProjectV2
    ... on ProjectV2 {
      # Field selection with pagination support
      fields(first: $first, after: $after) {
        # Pagination metadata for client-side navigation
        pageInfo {
          hasNextPage
          hasPreviousPage
          startCursor
          endCursor
        }
        # Field nodes with comprehensive metadata
        nodes {
          # Base field information
          ... on ProjectV2Field {
            id
            name
            # Enhanced metadata for better type safety and validation
            dataType
            isRequired
            # Performance: Only fetch essential fields
            createdAt
            updatedAt
          }
          # Single-select field specific data
          ... on ProjectV2SingleSelectField {
            id
            name
            dataType
            isRequired
            createdAt
            updatedAt
            # Options with enhanced metadata
            options {
              id
              name
              # Additional option metadata for enhanced functionality
              description
              # Performance: Limit option count to prevent large payloads
              color
            }
          }
        }
      }
    }
  }
}