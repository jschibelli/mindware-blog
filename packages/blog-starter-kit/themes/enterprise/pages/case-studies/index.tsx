/* eslint-disable @next/next/no-img-element */
import { motion } from 'framer-motion';
import { GetStaticProps } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import React from 'react';

import { addPublicationJsonLd } from '@starter-kit/utils/seo/addPublicationJsonLd';
import { getAutogeneratedPublicationOG } from '@starter-kit/utils/social/og';
import { AppProvider } from '../../components/contexts/appContext';
import ModernHeader from '../../components/features/navigation/modern-header';
import { Container } from '../../components/shared/container';
import { Footer } from '../../components/shared/footer';
import { Layout } from '../../components/shared/layout';
import { Button, Badge } from '../../components/ui';
import {
	Card,
	CardContent,
	CardDescription,
	CardHeader,
	CardTitle,
} from '../../components/ui/card';
import { Section } from '../../components/ui';
import { siteConfig } from '../../config/site';
import localCaseStudies from '../../data/case-studies.json';
import { PublicationFragment } from '../../generated/graphql';

type Props = {
	publication: PublicationFragment;
};

export default function CaseStudiesPage({ publication }: Props) {
	const [prefersReducedMotion, setPrefersReducedMotion] = React.useState(false);

	React.useEffect(() => {
		const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');
		setPrefersReducedMotion(mediaQuery.matches);

		const handleChange = (e: MediaQueryListEvent) => {
			setPrefersReducedMotion(e.matches);
		};

		mediaQuery.addEventListener('change', handleChange);
		return () => mediaQuery.removeEventListener('change', handleChange);
	}, []);

	const containerVariants = {
		hidden: prefersReducedMotion ? { opacity: 0 } : { opacity: 0 },
		visible: prefersReducedMotion
			? { opacity: 1 }
			: {
					opacity: 1,
					transition: {
						staggerChildren: 0.1,
						delayChildren: 0.1,
					},
				},
	};

	const itemVariants = {
		hidden: prefersReducedMotion
			? { opacity: 0 }
			: {
					opacity: 0,
					y: 20,
				},
		visible: prefersReducedMotion
			? { opacity: 1 }
			: {
					opacity: 1,
					y: 0,
					transition: {
						duration: 0.6,
						ease: [0.25, 0.46, 0.45, 0.94],
					},
				},
	};

	return (
		<AppProvider publication={publication}>
			<Layout>
				<Head>
					<title>Case Studies – {publication.displayTitle || publication.title}</title>
					<meta
						name="description"
						content="Explore detailed case studies showcasing real-world solutions, technical implementations, and business outcomes."
					/>
					<meta property="twitter:card" content="summary_large_image" />
					<meta
						property="twitter:title"
						content={`Case Studies – ${publication.displayTitle || publication.title}`}
					/>
					<meta
						property="twitter:description"
						content="Explore detailed case studies showcasing real-world solutions, technical implementations, and business outcomes."
					/>
					<meta
						property="og:title"
						content={`Case Studies – ${publication.displayTitle || publication.title}`}
					/>
					<meta
						property="og:description"
						content="Explore detailed case studies showcasing real-world solutions, technical implementations, and business outcomes."
					/>
					<meta property="og:image" content={getAutogeneratedPublicationOG(publication)} />
					<meta property="twitter:image" content={getAutogeneratedPublicationOG(publication)} />
					<script
						type="application/ld+json"
						dangerouslySetInnerHTML={{
							__html: JSON.stringify(addPublicationJsonLd(publication)),
						}}
					/>
				</Head>

				<ModernHeader publication={publication} />

				<main className="min-h-screen">
					<motion.div
						variants={containerVariants}
						initial="hidden"
						animate="visible"
						className="py-8 md:py-12"
					>
						<Container>
							{/* Page Header */}
							<motion.div variants={itemVariants} className="mb-12">
								<Section className="text-center">
									<h1 className="from-foreground to-foreground/80 mb-6 bg-gradient-to-r bg-clip-text text-4xl font-bold text-transparent md:text-5xl lg:text-6xl">
										Case Studies
									</h1>
									<p className="text-muted-foreground mx-auto max-w-3xl text-xl leading-relaxed">
										Explore detailed case studies showcasing real-world solutions, technical
										implementations, and business outcomes.
									</p>
								</Section>
							</motion.div>

							{/* Local Case Studies Grid */}
							<motion.div variants={itemVariants} className="mb-12">
								{(localCaseStudies as any).length > 0 ? (
									<div className="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
										{(localCaseStudies as any).map((cs: any) => (
											<motion.div key={cs.id} variants={itemVariants} className="group">
												<Card className="group overflow-hidden h-full border border-border bg-card shadow-lg transition-all duration-500 hover:scale-[1.02] hover:border-primary/30 hover:shadow-xl">
													<CardHeader className="pb-4">
														{cs.image && (
															<div className="relative mb-4 aspect-video overflow-hidden">
																<img
																	src={cs.image}
																	alt={`Cover for ${cs.title}`}
																	className="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
																	loading="lazy"
																/>
																<div className="absolute inset-0 bg-gradient-to-t from-black/40 via-black/10 to-transparent opacity-0 transition-all duration-500 group-hover:opacity-100" />
																{cs.tags?.length ? (
																	<div className="absolute left-4 top-4 transition-all duration-300 group-hover:scale-110">
																		<Badge variant="secondary" className="bg-background/90 border border-border/50 shadow-lg backdrop-blur-sm">
																			{cs.tags[0]}
																		</Badge>
																	</div>
																) : null}
																<div className="absolute inset-0 flex items-center justify-center opacity-0 transition-all duration-300 group-hover:opacity-100">
																	<div className="bg-primary/90 text-primary-foreground rounded-full px-4 py-2 text-sm font-medium backdrop-blur-sm">
																		Read Case Study
																	</div>
																</div>
															</div>
														)}
														<CardTitle className="group-hover:text-primary line-clamp-2 text-xl font-bold transition-colors duration-200">
															{cs.title}
														</CardTitle>
														<CardDescription className="text-muted-foreground line-clamp-3">
															{cs.description}
														</CardDescription>
													</CardHeader>
													<CardContent className="pt-0">
														<Button
															asChild
															variant="outline"
															className="group-hover:bg-primary group-hover:text-primary-foreground w-full transition-colors duration-200"
														>
															<Link href={`/case-studies/${cs.slug}`}>
																Read Case Study
																<svg
																	className="ml-2 h-4 w-4 transition-transform duration-200 group-hover:translate-x-1"
																	fill="none"
																	stroke="currentColor"
																	viewBox="0 0 24 24"
																>
																	<path
																		strokeLinecap="round"
																		strokeLinejoin="round"
																		strokeWidth={2}
																		d="M9 5l7 7-7 7"
																	/>
																</svg>
															</Link>
														</Button>
													</CardContent>
												</Card>
											</motion.div>
										))}
									</div>
								) : (
									<div className="py-12 text-center">
										<div className="bg-primary/20 mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-lg">
											<svg
												className="text-primary h-8 w-8"
												fill="none"
												stroke="currentColor"
												viewBox="0 0 24 24"
											>
												<path
													strokeLinecap="round"
													strokeLinejoin="round"
													strokeWidth={2}
													d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
												/>
											</svg>
										</div>
										<h3 className="text-foreground mb-2 text-lg font-semibold">
											No Case Studies Yet
										</h3>
										<p className="text-muted-foreground">
											Check back soon for detailed case studies.
										</p>
									</div>
								)}
							</motion.div>

							{/* CTA Section */}
							<motion.div variants={itemVariants} className="text-center">
								<Card className="from-primary/10 to-primary/5 border-primary/20 bg-gradient-to-br">
									<CardContent className="pt-6">
										<h3 className="text-foreground mb-4 text-2xl font-bold">
											Have a Project in Mind?
										</h3>
										<p className="text-muted-foreground mx-auto mb-6 max-w-2xl">
											Let&apos;s discuss how we can bring your vision to life with a custom solution
											tailored to your needs.
										</p>
										<div className="flex flex-col justify-center gap-4 sm:flex-row">
											<Button asChild size="lg">
												<Link href="/contact">Start a Project</Link>
											</Button>
											<Button asChild variant="outline" size="lg">
												<Link href="/work">View Portfolio</Link>
											</Button>
										</div>
									</CardContent>
								</Card>
							</motion.div>
						</Container>
					</motion.div>
				</main>

				<Footer />
			</Layout>
		</AppProvider>
	);
}

export const getStaticProps: GetStaticProps<Props> = async () => {
	// Simple fallback publication data with required properties
	const publication = {
		title: siteConfig.name,
		displayTitle: siteConfig.name,
		url: siteConfig.url,
		logo: null,
		posts: {
			totalDocuments: 0,
		},
		preferences: {
			logo: null,
		},
		author: {
			name: siteConfig.name,
			profilePicture: null,
		},
		followersCount: 0,
		isTeam: false,
		favicon: null,
		descriptionSEO: siteConfig.description,
		ogMetaData: {
			image: null,
		},
	} as unknown as PublicationFragment;

	return {
		props: {
			publication,
		},
		revalidate: 60,
	};
};
