import { addPublicationJsonLd } from '@starter-kit/utils/seo/addPublicationJsonLd';
import { getAutogeneratedPublicationOG } from '@starter-kit/utils/social/og';
import request from 'graphql-request';
import { GetStaticProps } from 'next';
import {
	PostFragment,
	PostsByPublicationDocument,
	PostsByPublicationQuery,
	PostsByPublicationQueryVariables,
	PublicationFragment,
} from '../generated/graphql';

// Import all the new components
import LatestPosts from '../components/features/blog/latest-posts';
import Hero from '../components/features/homepage/hero';
import Intro from '../components/features/homepage/intro';
import SkillsTicker from '../components/features/homepage/skills-ticker';
import CTABanner from '../components/features/marketing/cta-banner';
import FeaturedProjects from '../components/features/portfolio/featured-projects';

// Import navigation and footer
import { AppProvider } from '../components/contexts/appContext';
import Chatbot from '../components/features/chatbot/Chatbot';
import ModernHeader from '../components/features/navigation/modern-header';
import { Footer } from '../components/shared/footer';
import { SEOHead } from '../components/shared/seo-head';
import { generateWebSiteStructuredData } from '../lib/structured-data';

const GQL_ENDPOINT = process.env.NEXT_PUBLIC_HASHNODE_GQL_ENDPOINT || 'https://gql.hashnode.com/';

type Props = {
	publication: PublicationFragment;
	recentPosts: PostFragment[];
};

export default function Home({ publication, recentPosts }: Props) {
	const siteTitle = publication.displayTitle || publication.title || 'John Schibelli - Senior Front-End Developer';
	const siteDescription = publication.descriptionSEO || 'Senior Front-End Developer with 15+ years of experience building scalable, high-performance web applications. Expert in React, Next.js, TypeScript, and modern development practices. Available for freelance projects and consulting.';
	const ogImage = getAutogeneratedPublicationOG(publication);

	return (
		<AppProvider publication={publication}>
			<SEOHead
				title={siteTitle}
				description={siteDescription}
				keywords={[
					'React Developer',
					'Next.js Developer',
					'TypeScript Developer',
					'Front-End Development',
					'Web Development Services',
					'UI/UX Design',
					'Mobile Development',
					'Cloud Solutions',
					'Web Accessibility',
					'Performance Optimization',
				]}
				canonical="/"
				ogImage={ogImage}
				ogType="website"
				structuredData={generateWebSiteStructuredData()}
			/>

			{/* Skip to main content link for accessibility */}
			<a href="#main-content" className="skip-link">
				Skip to main content
			</a>

			{/* Navigation */}
			<ModernHeader publication={publication} />

			{/* Homepage Sections in order */}
			<main id="main-content" role="main">
				{/* 1. Hero Section */}
				<Hero />

				{/* 2. Intro Section */}
				<Intro />

				{/* 3. Featured Projects */}
				<FeaturedProjects />

				{/* 4. Skills & Tools Ticker */}
				<SkillsTicker />

				{/* 5. Latest Blog Posts */}
				<LatestPosts />

				{/* 6. CTA Banner */}
				<CTABanner />

				{/* 7. Chatbot */}
				<Chatbot />
			</main>

			{/* Footer */}
			<Footer publication={publication} />

		</AppProvider>
	);
}

export const getStaticProps: GetStaticProps<Props> = async () => {
	const host = process.env.NEXT_PUBLIC_HASHNODE_PUBLICATION_HOST || 'mindware.hashnode.dev';

	try {
		const data = await request<PostsByPublicationQuery, PostsByPublicationQueryVariables>(
			GQL_ENDPOINT,
			PostsByPublicationDocument,
			{
				first: 0,
				host: host,
			},
		);

		const publication = data.publication;
		if (!publication) {
			return {
				notFound: true,
			};
		}

		return {
			props: {
				publication,
				recentPosts: [],
			},
			revalidate: 1,
		};
	} catch (error) {
		console.error('Error fetching publication data:', error);
		// Return a fallback response to prevent the build from failing
		return {
			props: {
				publication: {
					id: 'fallback',
					title: 'John Schibelli',
					displayTitle: 'John Schibelli',
					descriptionSEO: 'Senior Front-End Developer with 15+ years of experience',
					url: 'https://mindware.hashnode.dev',
					posts: {
						totalDocuments: 0,
					},
					preferences: {
						logo: null,
					},
					author: {
						name: 'John Schibelli',
						profilePicture: null,
					},
					followersCount: 0,
					isTeam: false,
					favicon: null,
					ogMetaData: {
						image: null,
					},
				} as any,
				recentPosts: [],
			},
			revalidate: 1,
		};
	}
};
